{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/codecare-ai/software-upgrade-assistant-frontend/src/app/api/scans/%5BscanId%5D/results/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { DependencyInfo } from '@/services/dependency-scan-service';\nimport type { NextRequest } from 'next/server';\n\ndeclare global {\n  var scans: Map<string, any>;\n}\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { scanId: string } }\n) {\n  try {\n    console.log(`[Results API] Fetching results for scan ${params.scanId}`);\n    \n    if (!global.scans) {\n      console.log('[Results API] Scans map is not initialized');\n      global.scans = new Map();\n    }\n\n    const scan = global.scans.get(params.scanId);\n    console.log('[Results API] Found scan:', scan);\n\n    if (!scan) {\n      console.log(`[Results API] Scan ${params.scanId} not found`);\n      return NextResponse.json(\n        { error: 'Scan not found' },\n        { status: 404 }\n      );\n    }\n\n    if (scan.status !== 'completed') {\n      console.log(`[Results API] Scan ${params.scanId} not yet completed`);\n      return NextResponse.json(\n        { error: 'Scan not completed' },\n        { status: 400 }\n      );\n    }\n\n    // If we already have results, return them\n    if (scan.results) {\n      console.log(`[Results API] Returning cached results for scan ${params.scanId}`);\n      return NextResponse.json(scan.results);\n    }\n\n    // Generate simulated results\n    const results = {\n      repoUrl: scan.repoUrl,\n      service: scan.repoUrl.split('/').pop() || '',\n      language: 'JavaScript',\n      runtime: 'Node.js 18.x',\n      baseImage: 'node:18-alpine',\n      dependencies: [\n        {\n          name: 'next',\n          version: '13.4.7',\n          type: 'direct',\n          status: 'ok',\n        },\n        {\n          name: 'react',\n          version: '18.2.0',\n          type: 'direct',\n          status: 'ok',\n        }\n      ] as DependencyInfo[],\n      scanType: scan.scanType,\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      summary: 'All dependencies are up to date and secure.'\n    };\n\n    // Store the results in the scan object\n    scan.results = results;\n    global.scans.set(params.scanId, scan);\n    \n    console.log(`[Results API] Returning results for scan ${params.scanId}`);\n    return NextResponse.json(results);\n  } catch (error) {\n    console.error('[Results API] Error:', error);\n    return NextResponse.json(\n      { error: 'Failed to get scan results' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAQO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAAkC;IAE1C,IAAI;QACF,QAAQ,GAAG,CAAC,CAAC,wCAAwC,EAAE,OAAO,MAAM,EAAE;QAEtE,IAAI,CAAC,OAAO,KAAK,EAAE;YACjB,QAAQ,GAAG,CAAC;YACZ,OAAO,KAAK,GAAG,IAAI;QACrB;QAEA,MAAM,OAAO,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,MAAM;QAC3C,QAAQ,GAAG,CAAC,6BAA6B;QAEzC,IAAI,CAAC,MAAM;YACT,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,OAAO,MAAM,CAAC,UAAU,CAAC;YAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,KAAK,MAAM,KAAK,aAAa;YAC/B,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,OAAO,MAAM,CAAC,kBAAkB,CAAC;YACnE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqB,GAC9B;gBAAE,QAAQ;YAAI;QAElB;QAEA,0CAA0C;QAC1C,IAAI,KAAK,OAAO,EAAE;YAChB,QAAQ,GAAG,CAAC,CAAC,gDAAgD,EAAE,OAAO,MAAM,EAAE;YAC9E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,KAAK,OAAO;QACvC;QAEA,6BAA6B;QAC7B,MAAM,UAAU;YACd,SAAS,KAAK,OAAO;YACrB,SAAS,KAAK,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM;YAC1C,UAAU;YACV,SAAS;YACT,WAAW;YACX,cAAc;gBACZ;oBACE,MAAM;oBACN,SAAS;oBACT,MAAM;oBACN,QAAQ;gBACV;gBACA;oBACE,MAAM;oBACN,SAAS;oBACT,MAAM;oBACN,QAAQ;gBACV;aACD;YACD,UAAU,KAAK,QAAQ;YACvB,QAAQ;YACR,WAAW,IAAI,OAAO,WAAW;YACjC,SAAS;QACX;QAEA,uCAAuC;QACvC,KAAK,OAAO,GAAG;QACf,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,MAAM,EAAE;QAEhC,QAAQ,GAAG,CAAC,CAAC,yCAAyC,EAAE,OAAO,MAAM,EAAE;QACvE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}